import type { NewsItem } from './rss'
import type { Shot } from '../store'

export type BuiltScript = {
  shots: Shot[]
  subtitles: { start:number; end:number; text:string }[]
}

function sanitize(text:string, censorWords:string[]) {
  let out = text
  for (const w of censorWords) {
    if (!w) continue
    const re = new RegExp(w.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'gi')
    out = out.replace(re, '***')
  }
  return out
}

export function buildFromNews(prompt:string, news:NewsItem[], duration=45, censorWords:string[]=['__BEEP__']): BuiltScript {
  const total = Math.max(30, Math.min(60, duration))
  const layout = [
    { key:'HOOK', d:3 },{ key:'CONTEXT', d:5 },
    { key:'INSIGHT1', d:8 },{ key:'INSIGHT2', d:8 },
    { key:'JOKE', d:7 },{ key:'TAKEAWAY', d:10 },{ key:'CTA', d:4 }
  ]
  const scale = total / layout.reduce((s,a)=>s+a.d,0)
  let t = 0
  const shots: Shot[] = []
  const subs: {start:number; end:number; text:string}[] = []

  const n0 = news[0]?.title || '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏•‡∏≤‡∏î‡∏Ñ‡∏£‡∏¥‡∏õ‡πÇ‡∏ï‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ'
  const n1 = news[1]?.title || ''
  const n2 = news[2]?.title || ''

  function add(text:string, fx:string[], camera:string[] = [], bg?:string, d?:number) {
    const dur = Math.round(((d ?? 0) * scale) * 10)/10 || Math.round((5*scale)*10)/10
    shots.push({ t, d:dur, text: sanitize(text, censorWords), fx, camera, bg })
    subs.push({ start:t, end:t+dur, text: sanitize(text, censorWords)})
    t += dur
  }

  add('*‡∏ö‡∏µ‡πä‡∏ö* ‡πÄ‡∏õ‡∏¥‡∏î‡πÇ‡∏•‡∏Å‡∏Ñ‡∏£‡∏¥‡∏õ‡πÇ‡∏ï‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ!', ['glitch','shake','typewriter'], [], undefined, layout[0].d)
  add(`‡πÄ‡∏Æ‡πâ‡∏¢ ‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏î‡πà‡∏ô: ${n0}`, ['slideIn','parallax','highlightGlow'], ['pan'], undefined, layout[1].d)
  add(`‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô: ${n1 || '‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏´‡∏ß‡∏µ‡πà‡∏¢‡∏á ‡πÅ‡∏£‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏´‡∏ô‡∏≤‡πÅ‡∏ô‡πà‡∏ô'}`, ['kenBurns','countUp'], ['parallax'], undefined, layout[2].d)
  add(`‡πÄ‡∏à‡∏≤‡∏∞‡∏•‡∏∂‡∏Å: ${n2 || '‡∏°‡∏∑‡∏≠‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏û‡∏á-‡∏≠‡∏≠‡∏Å‡∏ñ‡∏π‡∏Å ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏£‡πâ‡πÅ‡∏ú‡∏ô'}`, ['lightSweep','popIn'], ['kenBurns'], undefined, layout[3].d)
  add('‡∏°‡∏∏‡∏Å‡πÄ‡∏ß‡∏•‡∏≤: ‡∏Å‡∏£‡∏≤‡∏ü‡∏ô‡∏µ‡πà‡∏£‡∏ñ‡πÑ‡∏ü‡πÄ‡∏´‡∏≤‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πÑ‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô? ü§°', ['speedLines','popIn'], [], undefined, layout[4].d)
  add('‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ: ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ ‡∏≠‡∏î‡∏ó‡∏ô‡∏ï‡∏≠‡∏ô‡∏ï‡∏•‡∏≤‡∏î‡πÄ‡∏´‡∏ß‡∏µ‡πà‡∏¢‡∏á', ['dollyZoom','colorGrade'], [], undefined, layout[5].d)
  add('‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÑ‡∏ß‡πâ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏û‡∏≤‡∏•‡∏∏‡∏¢ Deep Ocean ‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô!', ['particleBurst'], [], undefined, layout[6].d)

  return { shots, subtitles: subs }
}